// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}


model User {
  id String @id @default(auto())@map("_id")@db.ObjectId
  name String
  email String @unique
  username String  @unique
  password String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}


model Product {
  id String @id @default(auto())@map("_id")@db.ObjectId
  name String
  description String
  price Float
  category String
  sub_category String?
  rating Float
  quantity Int
  size String
  isNew Boolean @default(false)
  inStock Boolean @default(false)
  image String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  OrderItem OrderItem[]
}

model Order {
  id String @id @default(auto())@map("_id")@db.ObjectId
  total Float
  status String
  paymentMethod String
  paymentStatus String
  paymentNumber String?
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  OrderItem OrderItem[]
  Shipping Shipping[]
  

}

model OrderItem {
  id String @id @default(auto())@map("_id")@db.ObjectId
  quantity Int
  orderId String @db.ObjectId
  productId String @db.ObjectId
  Order Order @relation(fields: [orderId],references: [id], onDelete: Cascade)
  Product Product @relation(fields: [productId],references: [id], onDelete: Cascade)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}


model Shipping {
  id String @id @default(auto())@map("_id")@db.ObjectId
  name String
  email String
  phone String
  schedule String?
  note String
  address String
  city String
  orderId String @db.ObjectId
  Order Order @relation(fields: [orderId] , references: [id])
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}